// class-content-service/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Subject {
  id      Int     @id @default(autoincrement())
  name    String
  grade   Int
  classes Class[]
}

model Class {
  id                Int       @id @default(autoincrement())
  name              String
  description       String?
  imageUrl          String?
  createdAt         DateTime  @default(now())
  teacherId         Int
  homeroomTeacherId Int?
  subject           Subject   @relation(fields: [subjectId], references: [id])
  subjectId         Int
  topics            Topic[]
  members           Class_Members[]
  pengajar        Teacher @relation("KelasDiajar", fields: [teacherId], references: [id])
  waliKelas       Teacher? @relation("WaliKelas", fields: [homeroomTeacherId], references: [id])
}

model Teacher {
  id          Int     @id @default(autoincrement())
  fullName    String
  kelasDiajar Class[] @relation("KelasDiajar")
  jadiWali    Class[] @relation("WaliKelas")
}

model Topic {
  id        Int      @id @default(autoincrement())
  title     String
  order     Int
  createdAt DateTime @default(now())
  class     Class    @relation(fields: [classId], references: [id], onDelete: Cascade)
  classId   Int
  materials Material[]
}

model Material {
  id         Int      @id @default(autoincrement())
  title      String
  fileUrl    String?
  content    String?
  youtubeUrl String?
  createdAt  DateTime @default(now())
  topic      Topic?   @relation(fields: [topicId], references: [id], onDelete: SetNull)
  topicId    Int?
}

model Class_Members {
  classId   Int
  studentId Int

  @@id([studentId, classId])
  class     Class @relation(fields: [classId], references: [id], onDelete: Cascade)
}