# Baris 'version' dihapus untuk menghilangkan peringatan

networks:
  lms-network:
    driver: bridge

services:
  # ==================================================================
  # DATABASE SERVICES (Nama layanan di sini adalah kunci)
  # ==================================================================
  user_db: # <<< Nama layanan disederhanakan
    image: postgres:14-alpine
    container_name: user_db # <<< Nama kontainer disederhanakan
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_db # <<< Nama DB disederhanakan
    ports:
      - "5431:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - lms-network

  course_db:
    image: postgres:14-alpine
    container_name: course_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: course_db
    ports:
      - "5432:5432"
    volumes:
      - course_db_data:/var/lib/postgresql/data
    networks:
      - lms-network

  grading_db:
    image: postgres:14-alpine
    container_name: grading_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: grading_db
    ports:
      - "5433:5432"
    volumes:
      - grading_db_data:/var/lib/postgresql/data
    networks:
      - lms-network

  attendance_db:
    image: postgres:14-alpine
    container_name: attendance_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: attendance_db
    ports:
      - "5434:5432"
    volumes:
      - attendance_db_data:/var/lib/postgresql/data
    networks:
      - lms-network

  admin_db:
    image: postgres:14-alpine
    container_name: admin_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: admin_db
    ports:
      - "5435:5432"
    volumes:
      - admin_db_data:/var/lib/postgresql/data
    networks:
      - lms-network

  # ==================================================================
  # BACKEND SERVICES
  # ==================================================================
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    restart: always
    ports:
      - "4000:4000"
    depends_on: # <-- Dependensi ini sudah benar, ke layanan backend
      - user-service
      - course-service
      - grading-service
      - attendance-service
      - admin-service
    environment:
      PORT: 4000
      USER_SERVICE_URL: http://user-service:4001
      COURSE_SERVICE_URL: http://course-service:4002
      GRADING_SERVICE_URL: http://grading-service:4003
      ATTENDANCE_SERVICE_URL: http://attendance-service:4004
      ADMIN_SERVICE_URL: http://admin-service:4005
    networks:
      - lms-network

  user-service:
    build:
      context: ./services/1-user-service
    container_name: user-service
    restart: always
    ports:
      - "4001:4001"
    # --- PERBAIKAN 1: Dependensi ke database, bukan ke diri sendiri
    depends_on:
      - user_db
    environment:
      # --- PERBAIKAN 2: Gunakan nama layanan DB sebagai host dan kredensial yang benar
      DATABASE_URL: "postgresql://user:password@user_db:5432/user_db?schema=public"
      JWT_SECRET: "KunciSangatRahasiaYangHarusDiganti"
      PORT: 4001
    networks:
      - lms-network

  course-service:
    build:
      context: ./services/2-course-service
    container_name: course-service
    restart: always
    ports:
      - "4002:4002"
    depends_on:
      - course_db # <<< PERBAIKAN
    environment:
      DATABASE_URL: "postgresql://user:password@course_db:5432/course_db?schema=public" # <<< PERBAIKAN
      JWT_SECRET: "KunciSangatRahasiaYangHarusDiganti"
      PORT: 4002
      USER_SERVICE_URL: "http://user-service:4001/api"
      GRADING_SERVICE_URL: "http://grading-service:4003/api"
    networks:
      - lms-network

  grading-service:
    build:
      context: ./services/3-grading-service
    container_name: grading-service
    restart: always
    ports:
      - "4003:4003"
    depends_on:
      - grading_db # <<< PERBAIKAN
    environment:
      DATABASE_URL: "postgresql://user:password@grading_db:5432/grading_db?schema=public" # <<< PERBAIKAN
      JWT_SECRET: "KunciSangatRahasiaYangHarusDiganti"
      PORT: 4003
    networks:
      - lms-network

  attendance-service:
    build:
      context: ./services/4-attendance-service
    container_name: attendance-service
    restart: always
    ports:
      - "4004:4004"
    depends_on:
      - attendance_db # <<< PERBAIKAN
    environment:
      DATABASE_URL: "postgresql://user:password@attendance_db:5432/attendance_db?schema=public" # <<< PERBAIKAN
      JWT_SECRET: "KunciSangatRahasiaYangHarusDiganti"
      PORT: 4004
    networks:
      - lms-network

  admin-service:
    build:
      context: ./services/5-admin-service
    container_name: admin-service
    restart: always
    ports:
      - "4005:4005"
    depends_on:
      - admin_db # <<< PERBAIKAN
    environment:
      DATABASE_URL: "postgresql://user:password@admin_db:5432/admin_db?schema=public" # <<< PERBAIKAN
      JWT_SECRET: "KunciSangatRahasiaYangHarusDiganti"
      PORT: 4005
    networks:
      - lms-network

  # ==================================================================
  # FRONTEND SERVICE
  # ==================================================================
  client:
    build:
      context: ./client
    container_name: client
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:4000/api
      NEXT_PUBLIC_BACKEND_URL: http://localhost:4000
    networks:
      - lms-network

# Mendefinisikan volume untuk persistensi data database
volumes:
  user_db_data:
  course_db_data:
  grading_db_data:
  attendance_db_data:
  admin_db_data: